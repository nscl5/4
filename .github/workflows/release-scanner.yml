name: Release VPN Scanner

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: true
        default: 'v1.0.0'

jobs:
  release-scanner:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
        
    - name: Build scanner for multiple platforms
      run: |
        cd scanner
        echo "Building VPN Scanner for multiple platforms..."
        
        # Create release directory
        mkdir -p ../release
        
        # Build for different platforms
        platforms=(
          "linux/amd64"
          "linux/arm64"
          "darwin/amd64"
          "darwin/arm64"
          "windows/amd64"
          "windows/arm64"
        )
        
        for platform in "${platforms[@]}"; do
          IFS='/' read -r os arch <<< "$platform"
          output_name="v2go-scanner"
          
          if [ "$os" = "windows" ]; then
            output_name="${output_name}.exe"
          fi
          
          echo "Building for $os/$arch..."
          GOOS=$os GOARCH=$arch go build -ldflags="-s -w" -o "../release/v2go-scanner-$os-$arch$([ "$os" = "windows" ] && echo ".exe")" scanner_main.go scanner.go
        done
        
        # Create checksums
        cd ../release
        for file in v2go-scanner-*; do
          sha256sum "$file" > "$file.sha256"
        done
        
        echo "Release files created:"
        ls -la
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
        name: "VPN Configuration Scanner ${{ github.event.inputs.tag_name || github.ref_name }}"
        body: |
          # ðŸ›° VPN Configuration Scanner ${{ github.event.inputs.tag_name || github.ref_name }}
          
          ## ðŸš€ Features
          - **Multi-Protocol Support**: VMess, VLess, Trojan, Shadowsocks
          - **Lightning Fast**: Processes 15,795+ configs in ~100ms
          - **Cross-Platform**: Windows, macOS, Linux (AMD64 & ARM64)
          - **Smart Filtering**: Optional latency measurement
          - **Comprehensive Testing**: 84.1% test coverage
          
          ## ðŸ“¦ Downloads
          Choose the binary for your platform:
          - `v2go-scanner-linux-amd64` - Linux x64
          - `v2go-scanner-linux-arm64` - Linux ARM64
          - `v2go-scanner-darwin-amd64` - macOS Intel
          - `v2go-scanner-darwin-arm64` - macOS Apple Silicon
          - `v2go-scanner-windows-amd64.exe` - Windows x64
          - `v2go-scanner-windows-arm64.exe` - Windows ARM64
          
          ## ðŸŽ¯ Usage
          ```bash
          # Fast scanning (no latency measurement)
          ./v2go-scanner-linux-amd64 -dir=/path/to/configs -timeout=1s
          
          # With latency measurement (slower but more accurate)
          ./v2go-scanner-linux-amd64 -dir=/path/to/configs -timeout=1s -latency
          ```
          
          ## ðŸ“Š Performance
          - **15,795+ configurations** processed in **~100ms**
          - **4 protocols supported**: VMess, VLess, Trojan, Shadowsocks
          - **Memory efficient**: Handles large datasets without issues
          
          ## ðŸ”§ Installation
          1. Download the binary for your platform
          2. Make it executable: `chmod +x v2go-scanner-*`
          3. Run with your config directory
        files: release/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
